{"version":3,"sources":["../../server/services/order.service.js"],"names":["orders","dummyData","OrderServices","getOrders","addOrder","order","length","lastId","orderId","newId","newOrder","Orders","id","customerId","meal","total","push","updateOrder","Order","orderItself","find","Number","orderIndex","indexOf","mealsOrdered","modifyOrder","modified","splice","deleteOrder"],"mappings":";;;;;;;AAAA;;AACA;;;;IAEQA,M,GAAWC,uB,CAAXD,M,EAAqB;;AAE7B,IAAME,aAAa,GAAG;AACpBC,EAAAA,SADoB,uBACR;AACV,WAAOH,MAAP;AACD,GAHmB;AAIpBI,EAAAA,QAJoB,oBAIXC,KAJW,EAIJ;AACd;AACA,QAAMC,MAAM,GAAGN,MAAM,CAACM,MAAtB;AACA,QAAMC,MAAM,GAAGP,MAAM,CAACM,MAAM,GAAG,CAAV,CAAN,CAAmBE,OAAlC;AACA,QAAMC,KAAK,GAAGF,MAAM,GAAG,CAAvB;AACA,QAAMG,QAAQ,GAAG,IAAIC,cAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,EAAT,GAAcH,KAAd;AACAC,IAAAA,QAAQ,CAACG,UAAT,GAAsBR,KAAK,CAACQ,UAA5B;AACAH,IAAAA,QAAQ,CAACI,IAAT,GAAgBT,KAAK,CAACS,IAAtB;AACAJ,IAAAA,QAAQ,CAACK,KAAT,GAAiBV,KAAK,CAACU,KAAvB;AACAf,IAAAA,MAAM,CAACgB,IAAP,CAAYN,QAAZ;AACA,WAAOA,QAAP;AACD,GAhBmB;AAiBpBO,EAAAA,WAjBoB,uBAiBRL,EAjBQ,EAiBJM,KAjBI,EAiBG;AACrB,QAAMC,WAAW,GAAGnB,MAAM,CAACoB,IAAP,CAAY,UAAAf,KAAK;AAAA,aAAIgB,MAAM,CAAChB,KAAK,CAACG,OAAP,CAAN,KAA0Ba,MAAM,CAACT,EAAD,CAApC;AAAA,KAAjB,CAApB;AACA,QAAMU,UAAU,GAAGtB,MAAM,CAACuB,OAAP,CAAeJ,WAAf,CAAnB;;AACA,QAAI,CAACA,WAAL,EAAkB;AAChB,aAAO,iBAAP;AACD;;AACDA,IAAAA,WAAW,CAACK,YAAZ,GAA2BN,KAAK,CAACM,YAAjC;AACAL,IAAAA,WAAW,CAACJ,KAAZ,GAAoBG,KAAK,CAACH,KAA1B;;AACA,QAAII,WAAW,YAAYR,cAA3B,EAAmC;AACjCQ,MAAAA,WAAW,CAACM,WAAZ;AACD,KAFD,MAEO;AACLN,MAAAA,WAAW,CAACO,QAAZ,GAAuB,IAAvB;AACD;;AACD1B,IAAAA,MAAM,CAAC2B,MAAP,CAAcL,UAAd,EAA0B,CAA1B,EAA6BH,WAA7B;AACA,WAAOA,WAAP;AACD,GAhCmB;AAiCpBS,EAAAA,WAjCoB,uBAiCRhB,EAjCQ,EAiCJ;AACd,QAAMO,WAAW,GAAGnB,MAAM,CAACoB,IAAP,CAAY,UAAAf,KAAK;AAAA,aAAIgB,MAAM,CAAChB,KAAK,CAACG,OAAP,CAAN,KAA0Ba,MAAM,CAACT,EAAD,CAApC;AAAA,KAAjB,CAApB;;AACA,QAAI,CAACO,WAAL,EAAkB;AAChB,aAAO,sDAAP;AACD;;AACD,QAAMG,UAAU,GAAGtB,MAAM,CAACuB,OAAP,CAAeJ,WAAf,CAAnB;AACAnB,IAAAA,MAAM,CAAC2B,MAAP,CAAcL,UAAd,EAA0B,CAA1B;AACA,WAAO,4BAAP;AACD;AAzCmB,CAAtB;eA2CepB,a","sourcesContent":["import Orders from '../models/order.model';\r\nimport dummyData from '../data/orderDummyData';\r\n\r\nconst { orders } = dummyData;// seeing dummy stuff all the time is somehow jare :)\r\n\r\nconst OrderServices = {\r\n  getOrders() {\r\n    return orders;\r\n  },\r\n  addOrder(order) {\r\n    // eslint-disable-next-line prefer-destructuring\r\n    const length = orders.length;\r\n    const lastId = orders[length - 1].orderId;\r\n    const newId = lastId + 1;\r\n    const newOrder = new Orders();\r\n    newOrder.id = newId;\r\n    newOrder.customerId = order.customerId;\r\n    newOrder.meal = order.meal;\r\n    newOrder.total = order.total;\r\n    orders.push(newOrder);\r\n    return newOrder;\r\n  },\r\n  updateOrder(id, Order) {\r\n    const orderItself = orders.find(order => Number(order.orderId) === Number(id));\r\n    const orderIndex = orders.indexOf(orderItself);\r\n    if (!orderItself) {\r\n      return 'Order not found';\r\n    }\r\n    orderItself.mealsOrdered = Order.mealsOrdered;\r\n    orderItself.total = Order.total;\r\n    if (orderItself instanceof Orders) {\r\n      orderItself.modifyOrder();\r\n    } else {\r\n      orderItself.modified = true;\r\n    }\r\n    orders.splice(orderIndex, 1, orderItself);\r\n    return orderItself;\r\n  },\r\n  deleteOrder(id) {\r\n    const orderItself = orders.find(order => Number(order.orderId) === Number(id));\r\n    if (!orderItself) {\r\n      return \"Order not found. Non-existing order can't be deleted\";\r\n    }\r\n    const orderIndex = orders.indexOf(orderItself);\r\n    orders.splice(orderIndex, 1);\r\n    return 'Order deleted successfully';\r\n  },\r\n};\r\nexport default OrderServices;\r\n"],"file":"order.service.js"}